{"version":3,"file":"index.js","sources":["../verify/index.ts","../client/index.ts","../array/index.ts","../base/index.ts","../index.ts","../transform/index.ts","../color/index.ts"],"sourcesContent":["\n/**\n * 邮箱验证\n * a-zA-Z0-9和_- 不限数字不限长度\n * '@' 符合后面 a-zA-Z0-9和_-\n * '.' 符合后面 a-zA-Z0-9和_-\n */\nconst _isEmail = (s: any) => {\n  return /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$/.test(s)\n}\n\n/**\n * 手机号码\n * 1开头\n * 11位数\n */\nconst _isMobile = (s: any) => {\n  return /^1[0-9]{10}$/.test(s)\n}\n\n/**\n * 电话号码\n * '-' 前 0-9 三四位数\n * '-' 符合\n * '-' 后 0-9 七八位数\n */\nconst _isPhone = (s: any) => {\n  return /^([0-9]{3,4}-)?[0-9]{7,8}$/.test(s)\n}\n\n/**\n * 是否url地址\n * 只要有以下两种特征既符合 https:// http://\n */\nconst _isURL = (s: any) => {\n  return /^http[s]?:\\/\\/.*/.test(s)\n}\n\n/**\n * 是否字符串\n * 传入字符串或者空字符串返回true，\n * 不传或传其他类型值返回false\n */\nconst _isString = (o: any) => {\n  return Object.prototype.toString.call(o).slice(8, -1) === 'String'\n}\n\n/**\n * 是否数值\n * 传入数字返回true，\n * 不传或传其他类型值返回false\n */\nconst _isNumber = (o: any) => {\n  return Object.prototype.toString.call(o).slice(8, -1) === 'Number'\n}\n\n/**\n * 是否boolean\n * 传入true,false返回true\n * 不传或传其他类型值返回false\n */\nconst _isBoolean = (o: any) => {\n  return Object.prototype.toString.call(o).slice(8, -1) === 'Boolean'\n}\n\n/**\n * 是否函数\n * 传入方法返回true\n * 不传或传其他类型值返回false\n */\nconst _isFunction = (o: any) => {\n  return Object.prototype.toString.call(o).slice(8, -1) === 'Function'\n}\n\n/**\n * 是否为undefined\n * 传入undefined返回true\n * 不传或传其他类型值返回false\n */\nconst _isUndefined = (o: any) => {\n  return Object.prototype.toString.call(o).slice(8, -1) === 'Undefined'\n}\n\n/**\n * 是否对象\n * 传入{a:1}对象返回true\n * 不传或传其他类型值返回false\n */\nconst _isObj = (o: any) => {\n  return Object.prototype.toString.call(o).slice(8, -1) === 'Object'\n}\n/**\n * 是否数组\n * 传入[{a:1}]数组返回true\n * 不传或传其他类型值返回false\n */\nconst _isArray = (o: any) => {\n  return Object.prototype.toString.call(o).slice(8, -1) === 'Array'\n}\n\n/**\n * 是否时间\n * 传入时间new Date() 返回true\n * 不传或传其他类型值返回false\n * 传 '2023-01-10'返回false\n */\nconst _isDate = (o: any) => {\n  return Object.prototype.toString.call(o).slice(8, -1) === 'Date'\n}\n/**\n * 是否正则\n * 传入正则  /abc/ 返回true\n * 不传或传其他类型值返回false\n */\nconst _isRegExp = (o: any) => {\n  return Object.prototype.toString.call(o).slice(8, -1) === 'RegExp'\n}\n\n//是否错误对象\nconst _isError = (o: any) => {\n  return Object.prototype.toString.call(o).slice(8, -1) === 'Error'\n}\n\n//是否Symbol函数\nconst _isSymbol = (o: any) => {\n  return Object.prototype.toString.call(o).slice(8, -1) === 'Symbol'\n}\n\n//是否Promise对象\nconst _isPromise = (o: any) => {\n  return Object.prototype.toString.call(o).slice(8, -1) === 'Promise'\n}\n\n//是否Set对象\nconst _isSet = (o: any) => {\n  return Object.prototype.toString.call(o).slice(8, -1) === 'Set'\n}\n\nexport default {\n  _isEmail, \n  _isMobile, \n  _isPhone, \n  _isURL, \n  _isString, \n  _isNumber, \n  _isBoolean,\n  _isFunction, \n  _isUndefined, \n  _isObj, \n  _isArray, \n  _isDate, \n  _isRegExp,\n  _isError, \n  _isSymbol, \n  _isPromise, \n  _isSet\n}","//是否是微信浏览器\nconst ua: any = navigator.userAgent.toLowerCase()\nconst _isWeiXin = () => {\n  return ua.match(/microMessenger/i) == 'micromessenger'\n}\n\n//是否是移动端\nconst _isDeviceMobile = () => {\n  return /android|webos|iphone|ipod|balckberry/i.test(ua)\n}\n\n//是否是QQ浏览器\nconst _isQQBrowser = () => {\n  return !!ua.match(/mqqbrowser|qzone|qqbrowser|qbwebviewtype/i)\n}\n\n//是否是IE浏览器\nconst _isIE = () => {\n  return !!ua.match(/msie/i)\n}\n//是否是火狐\nconst _isFirefox = () => {\n  return !!ua.match(/firefox/i)\n}\n//是否是谷歌\nconst _isChrome = () => {\n  return !!ua.match(/chrome/i)\n}\n//是否是Opera\nconst _isOpera = () => {\n  return !!ua.match(/opera/i)\n}\n//是否是Safari\nconst _isSafari = () => {\n  return !!ua.match(/safari/i)\n}\n//是否是爬虫\nconst _isSpider = () => {\n  return /adsbot|googlebot|bingbot|msnbot|yandexbot|baidubot|robot|careerbot|seznambot|bot|baiduspider|jikespider|symantecspider|scannerlwebcrawler|crawler|360spider|sosospider|sogou web sprider|sogou orion spider/.test(ua)\n}\n\n//下面试不将其转为小写\nlet u: any = navigator.userAgent\n//是否ios\nconst _isIos = () => {\n  if (u.indexOf('Android') > -1 || u.indexOf('Linux') > -1) {\n    //安卓手机         \n    return false\n  } else if (u.indexOf('iPhone') > -1) {\n    //苹果手机         \n    return true\n  } else if (u.indexOf('iPad') > -1) {\n    //iPad         \n    return false\n  } else if (u.indexOf('Windows Phone') > -1) {\n    //winphone手机        \n    return false\n  } else {\n    return false\n  }\n}\n//是否为PC端\nconst _isPC = () => {\n  let Agents = [\n    'Android',\n    'iPhone',\n    'SymbianOS',\n    'Windows Phone',\n    'iPad',\n    'iPod'\n  ]\n  let flag = true\n  for (let v = 0; v < Agents.length; v++) {\n    if (u.indexOf(Agents[v]) > 0) {\n      flag = false\n      break\n    }\n  }\n  return flag\n}\n\n\nexport default {\n  _isWeiXin,\n  _isDeviceMobile,\n  _isQQBrowser,\n  _isIE,\n  _isFirefox,\n  _isChrome,\n  _isOpera,\n  _isSafari,\n  _isSpider,\n  _isIos,\n  _isPC,\n}\n","//洗牌算法随机\nconst _shuffle = (arr: any) => {\n  let result = []\n  let random\n  while (arr.length > 0) {\n    random = Math.floor(Math.random() * arr.length)\n    result.push(arr[random])\n    arr.splice(random, 1)\n  }\n  return result\n}\n\n\n//判断一个元素是否在数组中\nconst _contains = (arr: any, val: any) => {\n  return arr.indexOf(val) != -1 ? true : false\n}\n\n//数组排序，{type} 1：从小到大 2：从大到小 3：随机\nconst _sort = (arr: any, type: any = 1) => {\n  return arr.sort((a: any, b: any) => {\n    switch (type) {\n      case 1:\n        return a - b\n      case 2:\n        return b - a\n      case 3:\n        return Math.random() - 0.5\n      default:\n        return arr\n    }\n  })\n}\n\n//去重\nconst _unique = (arr: any) => {\n  if (Array.hasOwnProperty('from')) {\n    return Array.from(new Set(arr))\n  } else {\n    let n = {},\n      r = []\n    for (let i = 0; i < arr.length; i++) {\n      if (!n[arr[i]]) {\n        n[arr[i]] = true\n        r.push(arr[i])\n      }\n    }\n    return r\n  }\n}\n//求两个集合的并集\nconst _union = (a: any, b: any) => {\n  let newArr = a.concat(b)\n  return _unique(newArr)\n}\n\n//求两个集合的交集\nconst _intersect = (a: any, b: any) => {\n  a = _unique(a)\n  return a.map((o: any) => {\n    return _contains(b, o) ? o : null\n  })\n}\n//过滤值不存在,1\nconst _filter = (arr: any, type = '') => {\n  return arr.filter((s: any) => {\n    console.log(s !== type)\n    return s !== type;\n  });\n}\n\n//将类数组转换为数组\nconst _formArray = (ary: any) => {\n  let arr = []\n  if (Array.isArray(ary)) {\n    arr = ary\n  } else {\n    arr = Array.prototype.slice.call(ary)\n  }\n  return arr\n}\n\n//随机数范围\nconst _random = (min: any, max: any) => {\n  return Math.floor(min + Math.random() * (max + 1 - min))\n}\n\n//删除其中一个元素\nconst _remove = (arr: any, ele: any) => {\n  let index = arr.indexOf(ele)\n  if (index > -1) {\n    arr.splice(index, 1)\n  }\n  return arr\n}\n\n//最大值\nconst _max = (arr: any) => {\n  return Math.max.apply(null, arr)\n}\n//最小值\nconst _min = (arr: any) => {\n  return Math.min.apply(null, arr)\n}\n//求和\nconst _sum = (arr: any) => {\n  return arr.reduce((pre: any, cur: any) => {\n    return pre + cur\n  })\n}\n//平均值\nconst _average = (arr: any) => {\n  return _sum(arr) / arr.length\n}\n\n\nexport default {\n  _shuffle,\n  _contains,\n  _sort,\n  _unique,\n  _union,\n  _intersect,\n  _filter,\n  _formArray,\n  _random,\n  _remove,\n  _max,\n  _min,\n  _sum,\n  _average\n}\n","//劫持粘贴板\nconst _copyTextToClipboard = (value: any) => {\n  let textArea = document.createElement('textarea')\n  textArea.style.background = 'transparent'\n  textArea.value = value\n  document.body.appendChild(textArea)\n  textArea.select()\n  try {\n    let successful = document.execCommand('copy')\n  } catch (err) {\n    console.log('Oops, unable to copy')\n  }\n  document.body.removeChild(textArea)\n}\nexport default {\n  _copyTextToClipboard,\n\n}"," \nimport verify from './verify';\nimport client from './client';\nimport transform from './transform';\nimport array from './array';\nimport color from './color';\nimport base from './base';\nexport default { ...verify, ...client, ...transform, ...array, ...color, ...base }\n\n\n//去除html标签\nexport const removeHtmltag = (str: any) => {\n  return str.replace(/<[^>]+>/g, '')\n}\n//获取url参数\nexport const getQueryString = (name: any) => {\n  const reg = new RegExp('(^|&)' + name + '=([^&]*)(&|$)', 'i')\n  const search = window.location.search.split('?')[1] || ''\n  const r = search.match(reg) || []\n  return r[2]\n}\n//动态引入js\nexport const injectScript = (src: any) => {\n  const s = document.createElement('script')\n  s.type = 'text/javascript'\n  s.async = true\n  s.src = src\n  const t: any = document.getElementsByTagName('script')[0]\n  t.parentNode.insertBefore(s, t)\n}\n//根据url地址下载\nexport const download = (url: any) => {\n  let isChrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1\n  let isSafari = navigator.userAgent.toLowerCase().indexOf('safari') > -1\n  if (isChrome || isSafari) {\n    let link = document.createElement('a')\n    link.href = url\n    if (link.download !== undefined) {\n      let fileName = url.substring(url.lastIndexOf('/') + 1, url.length)\n      link.download = fileName\n    }\n    if (document.createEvent) {\n      let e = document.createEvent('MouseEvents')\n      e.initEvent('click', true, true)\n      link.dispatchEvent(e)\n      return true\n    }\n  }\n  if (url.indexOf('?') === -1) {\n    url += '?download'\n  }\n  window.open(url, '_self')\n  return true\n}\n\n//el是否包含某个class\nexport const hasClass = (el: any, className: any) => {\n  let reg = new RegExp('(^|\\\\s)' + className + '(\\\\s|$)')\n  return reg.test(el.className)\n}\n//el添加某个class\nexport const addClass = (el: any, className: any) => {\n  if (hasClass(el, className)) return\n  let newClass = el.className.split(' ')\n  newClass.push(className)\n  el.className = newClass.join(' ')\n}\n//el去除某个class\nexport const removeClass = (el: any, className: any) => {\n  if (!hasClass(el, className)) return\n  let reg = new RegExp('(^|\\\\s)' + className + '(\\\\s|$)', 'g')\n  el.className = el.className.replace(reg, ' ')\n}\n\n\n//获取滚动的坐标\nexport const getScrollPosition = (el: any = window) => ({\n  x: el.pageXOffset !== undefined ? el.pageXOffset : el.scrollLeft,\n  y: el.pageYOffset !== undefined ? el.pageYOffset : el.scrollTop\n})\n\n//滚动到顶部\nexport const scrollToTop = () => {\n  const c = document.documentElement.scrollTop || document.body.scrollTop\n  if (c > 0) {\n    window.requestAnimationFrame(scrollToTop)\n    window.scrollTo(0, c - c / 8)\n  }\n}\n//el是否在视口范围内\nexport const elementIsVisibleInViewport = (el: any, partiallyVisible: any = false) => {\n  const { top, left, bottom, right } = el.getBoundingClientRect()\n  const { innerHeight, innerWidth } = window\n  return partiallyVisible\n    ? ((top > 0 && top < innerHeight) ||\n      (bottom > 0 && bottom < innerHeight)) &&\n    ((left > 0 && left < innerWidth) || (right > 0 && right < innerWidth))\n    : top >= 0 && left >= 0 && bottom <= innerHeight && right <= innerWidth\n}\n\n\n \n//判断类型集合\nexport const checkStr = (str:any, type:any) => {\n  switch (type) {\n    case 'phone': //手机号码\n      return /^1[3|4|5|6|7|8|9][0-9]{9}$/.test(str)\n    case 'tel': //座机\n      return /^(0\\d{2,3}-\\d{7,8})(-\\d{1,4})?$/.test(str)\n    case 'card': //身份证\n      return /(^\\d{15}$)|(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(str)\n    case 'pwd': //密码以字母开头，长度在6~18之间，只能包含字母、数字和下划线\n      return /^[a-zA-Z]\\w{5,17}$/.test(str)\n    case 'postal': //邮政编码\n      return /[1-9]\\d{5}(?!\\d)/.test(str)\n    case 'QQ': //QQ号\n      return /^[1-9][0-9]{4,9}$/.test(str)\n    case 'email': //邮箱\n      return /^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/.test(str)\n    case 'money': //金额(小数点2位)\n      return /^\\d*(?:\\.\\d{0,2})?$/.test(str)\n    case 'URL': //网址\n      return /(http|ftp|https):\\/\\/[\\w\\-_]+(\\.[\\w\\-_]+)+([\\w\\-\\.,@?^=%&:/~\\+#]*[\\w\\-\\@?^=%&/~\\+#])?/.test(\n        str\n      )\n    case 'IP': //IP\n      return /((?:(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d)\\\\.){3}(?:25[0-5]|2[0-4]\\\\d|[01]?\\\\d?\\\\d))/.test(\n        str\n      )\n    case 'date': //日期时间\n      return (\n        /^(\\d{4})\\-(\\d{2})\\-(\\d{2}) (\\d{2})(?:\\:\\d{2}|:(\\d{2}):(\\d{2}))$/.test(\n          str\n        ) || /^(\\d{4})\\-(\\d{2})\\-(\\d{2})$/.test(str)\n      )\n    case 'number': //数字\n      return /^[0-9]$/.test(str)\n    case 'english': //英文\n      return /^[a-zA-Z]+$/.test(str)\n    case 'chinese': //中文\n      return /^[\\\\u4E00-\\\\u9FA5]+$/.test(str)\n    case 'lower': //小写\n      return /^[a-z]+$/.test(str)\n    case 'upper': //大写\n      return /^[A-Z]+$/.test(str)\n    case 'HTML': //HTML标记\n      return /<(\"[^\"]*\"|'[^']*'|[^'\">])*>/.test(str)\n    default:\n      return true\n  }\n}\n\n\n\n\n\n\n\n\n//去除空格,type: 1-所有空格 2-前后空格 3-前空格 4-后空格\nexport const trim = (str:any, type:any) => {\n  type = type || 1\n  switch (type) {\n    case 1:\n      return str.replace(/\\s+/g, '')\n    case 2:\n      return str.replace(/(^\\s*)|(\\s*$)/g, '')\n    case 3:\n      return str.replace(/(^\\s*)/g, '')\n    case 4:\n      return str.replace(/(\\s*$)/g, '')\n    default:\n      return str\n  }\n}\n\n// //函数节流器\n// export const debouncer = (fn:any, time:any, interval = 200) => {\n//   if (time - (window.debounceTimestamp || 0) > interval) {\n//     fn && fn()\n//     window.debounceTimestamp = time\n//   }\n// } \n\n//在字符串中插入新字符串\nexport const insertStr = (soure:any, index:any, newStr:any) => {\n  var str = soure.slice(0, index) + newStr + soure.slice(index)\n  return str\n} \n//判断两个对象是否键值相同\nexport const isObjectEqual = (a:any, b:any) => {\n  var aProps = Object.getOwnPropertyNames(a)\n  var bProps = Object.getOwnPropertyNames(b)\n  if (aProps.length !== bProps.length) {\n    return false\n  }\n  for (var i = 0; i < aProps.length; i++) {\n    var propName = aProps[i]\n    if (a[propName] !== b[propName]) {\n      return false\n    }\n  }\n  return true\n} \n\n\n\n\n\n//追加url参数\nexport const appendQuery = (url:any, key:any, value:any) => {\n  // var options = key\n  // if (typeof options == 'string') {\n  //   options = {}\n  //   options[key] = value\n  // }\n  // options = $.param(options)\n  // if (url.includes('?')) {\n  //   url += '&' + options\n  // } else {\n  //   url += '?' + options\n  // }\n  // return url\n}\n//获取一个随机布尔值 (true/false)\nexport const randomBoolean = () => Math.random() >= 0.5;\n//检查日期是否为工作日\nexport const isWeekday = (date:any) => date.getDay() % 6 !== 0;\n\n//反转字符串\nexport const reverse = (str:any) => str.split('').reverse().join('');\n//检查当前 Tab 页是否在前台\nexport const isBrowserTabInView = () => document.hidden;\n//检查数字是否为奇数\nexport const isEven = (num:any) => num % 2 === 0;\n//从日期中获取时间\nexport const timeFromDate = (date:any) => date.toTimeString().slice(0, 8);\n//保留小数点（非四舍五入）\nexport const toFixed = (n:any, fixed:any) => ~~(Math.pow(10, fixed) * n) / Math.pow(10, fixed);\n//检查元素当前是否为聚焦状态\nexport const elementIsInFocus = (el:any) => (el === document.activeElement);\n//检查浏览器是否支持触摸事件\n// const touchSupported = () => {\n//   ('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch);\n// }\n\n\n\n\n","\n//严格的身份证校验\nconst _isCardID = (sId: any) => {\n  if (!/(^\\d{15}$)|(^\\d{17}(\\d|X|x)$)/.test(sId)) {\n    console.log('你输入的身份证长度或格式错误')\n    return false\n  } //身份证城市\n  let aCity = {\n    11: '北京',\n    12: '天津',\n    13: '河北',\n    14: '山西',\n    15: '内蒙古',\n    21: '辽宁',\n    22: '吉林',\n    23: '黑龙江',\n    31: '上海',\n    32: '江苏',\n    33: '浙江',\n    34: '安徽',\n    35: '福建',\n    36: '江西',\n    37: '山东',\n    41: '河南',\n    42: '湖北',\n    43: '湖南',\n    44: '广东',\n    45: '广西',\n    46: '海南',\n    50: '重庆',\n    51: '四川',\n    52: '贵州',\n    53: '云南',\n    54: '西藏',\n    61: '陕西',\n    62: '甘肃',\n    63: '青海',\n    64: '宁夏',\n    65: '新疆',\n    71: '台湾',\n    81: '香港',\n    82: '澳门',\n    91: '国外'\n  }\n  if (!aCity[parseInt(sId.substr(0, 2))]) {\n    console.log('你的身份证地区非法')\n    return false\n  } // 出生日期验证\n  let sBirthday = (\n    sId.substr(6, 4) +\n    '-' +\n    Number(sId.substr(10, 2)) +\n    '-' +\n    Number(sId.substr(12, 2))\n  ).replace(/-/g, '/'),\n    d = new Date(sBirthday)\n  if (\n    sBirthday !=\n    d.getFullYear() + '/' + (d.getMonth() + 1) + '/' + d.getDate()\n  ) {\n    console.log('身份证上的出生日期非法')\n    return false\n  } \n  // 身份证号码校验     \n  let codes: any = 'X9876543210'\n  if (codes.indexOf(sId[sId.length - 1]) == -1) {\n    console.log('你输入的身份证号非法')\n    return false\n  }\n  return true\n}\n\n//将阿拉伯数字翻译成中文的大写数字\nconst _numberToChinese = (num: any) => {\n  let AA = new Array(\n    '零',\n    '一',\n    '二',\n    '三',\n    '四',\n    '五',\n    '六',\n    '七',\n    '八',\n    '九',\n    '十'\n  )\n  let BB = new Array('', '十', '百', '仟', '萬', '億', '点', '')\n  let a: any = ('' + num).replace(/(^0*)/g, '').split('.'),\n    k = 0,\n    re = ''\n  for (let i = a[0].length - 1; i >= 0; i--) {\n    switch (k) {\n      case 0:\n        re = BB[7] + re\n        break\n      case 4:\n        if (!new RegExp('0{4}//d{' + (a[0].length - i - 1) + '}$').test(a[0]))\n          re = BB[4] + re\n        break\n      case 8:\n        re = BB[5] + re\n        BB[7] = BB[5]\n        k = 0\n        break\n    }\n    if (k % 4 == 2 && a[0].charAt(i + 2) != 0 && a[0].charAt(i + 1) == 0)\n      re = AA[0] + re\n    if (a[0].charAt(i) != 0) re = AA[a[0].charAt(i)] + BB[k % 4] + re\n    k++\n  }\n  if (a.length > 1) {\n    re += BB[6]\n    for (let i = 0; i < a[1].length; i++) re += AA[a[1].charAt(i)]\n  }\n  if (re == '一十') re = '十'\n  if (re.match(/^一/) && re.length == 3) re = re.replace('一', '')\n  return re\n}\n\n//将数字转换为大写金额\nconst _changeToChinese = (Num: any) => {\n  //判断如果传递进来的不是字符的话转换为字符\n  if (typeof Num == 'number') {\n    Num = new String(Num)\n  }\n  Num = Num.replace(/,/g, '') //替换tomoney()中的“,”\n  Num = Num.replace(/ /g, '') //替换tomoney()中的空格\n  Num = Num.replace(/￥/g, '') //替换掉可能出现的￥字符\n  if (isNaN(Num)) {\n    //验证输入的字符是否为数字\n    //alert(\"请检查小写金额是否正确\");\n    return ''\n  }\n  //字符处理完毕后开始转换，采用前后两部分分别转换\n  let part = String(Num).split('.')\n  let newchar: any = '' //小数点前进行转化\n  for (let i = part[0].length - 1; i >= 0; i--) {\n    if (part[0].length > 10) {\n      return ''\n      //若数量超过拾亿单位，提示\n    }\n    let tmpnewchar: any = ''\n    let perchar: any = part[0].charAt(i)\n    switch (perchar) {\n      case '0':\n        tmpnewchar = '零' + tmpnewchar\n        break\n      case '1':\n        tmpnewchar = '壹' + tmpnewchar\n        break\n      case '2':\n        tmpnewchar = '贰' + tmpnewchar\n        break\n      case '3':\n        tmpnewchar = '叁' + tmpnewchar\n        break\n      case '4':\n        tmpnewchar = '肆' + tmpnewchar\n        break\n      case '5':\n        tmpnewchar = '伍' + tmpnewchar\n        break\n      case '6':\n        tmpnewchar = '陆' + tmpnewchar\n        break\n      case '7':\n        tmpnewchar = '柒' + tmpnewchar\n        break\n      case '8':\n        tmpnewchar = '捌' + tmpnewchar\n        break\n      case '9':\n        tmpnewchar = '玖' + tmpnewchar\n        break\n    }\n    switch (part[0].length - i - 1) {\n      case 0:\n        tmpnewchar = tmpnewchar + '元'\n        break\n      case 1:\n        if (perchar != 0) tmpnewchar = tmpnewchar + '拾'\n        break\n      case 2:\n        if (perchar != 0) tmpnewchar = tmpnewchar + '佰'\n        break\n      case 3:\n        if (perchar != 0) tmpnewchar = tmpnewchar + '仟'\n        break\n      case 4:\n        tmpnewchar = tmpnewchar + '万'\n\n        break\n      case 5:\n        if (perchar != 0) tmpnewchar = tmpnewchar + '拾'\n        break\n      case 6:\n        if (perchar != 0) tmpnewchar = tmpnewchar + '佰'\n        break\n      case 7:\n        if (perchar != 0) tmpnewchar = tmpnewchar + '仟'\n\n        break\n      case 8:\n        tmpnewchar = tmpnewchar + '亿'\n        break\n      case 9:\n        tmpnewchar = tmpnewchar + '拾'\n        break\n    }\n    newchar = tmpnewchar + newchar\n  }\n  //小数点之后进行转化\n  if (Num.indexOf('.') != -1) {\n    if (part[1].length > 2) {\n      // alert(\"小数点之后只能保留两位,系统将自动截断\");\n      part[1] = part[1].substr(0, 2)\n    }\n    for (let i = 0; i < part[1].length; i++) {\n      let tmpnewchar: any = ''\n      let perchar: any = part[1].charAt(i)\n      switch (perchar) {\n        case '0':\n          tmpnewchar = '零' + tmpnewchar\n          break\n        case '1':\n          tmpnewchar = '壹' + tmpnewchar\n          break\n        case '2':\n          tmpnewchar = '贰' + tmpnewchar\n          break\n        case '3':\n          tmpnewchar = '叁' + tmpnewchar\n          break\n        case '4':\n          tmpnewchar = '肆' + tmpnewchar\n          break\n        case '5':\n          tmpnewchar = '伍' + tmpnewchar\n          break\n        case '6':\n          tmpnewchar = '陆' + tmpnewchar\n          break\n        case '7':\n          tmpnewchar = '柒' + tmpnewchar\n\n          break\n        case '8':\n          tmpnewchar = '捌' + tmpnewchar\n          break\n        case '9':\n          tmpnewchar = '玖' + tmpnewchar\n          break\n      }\n      if (i == 0) tmpnewchar = tmpnewchar + '角'\n      if (i == 1) tmpnewchar = tmpnewchar + '分'\n      newchar = newchar + tmpnewchar\n    }\n  }\n  //替换所有无用汉字\n  while (newchar.search('零零') != -1) newchar = newchar.replace('零零', '零')\n  newchar = newchar.replace('零亿', '亿')\n  newchar = newchar.replace('亿万', '亿')\n  newchar = newchar.replace('零万', '万')\n  newchar = newchar.replace('零元', '元')\n  newchar = newchar.replace('零角', '')\n  newchar = newchar.replace('零分', '')\n  if (newchar.charAt(newchar.length - 1) == '元') {\n    newchar = newchar + '整'\n  }\n  return newchar\n}\n\n//字符转换，type: 1:首字母大写 2：首字母小写 3：大小写转换 4：全部大写 5：全部小写\nconst _changeCase = (str: any, type: any) => {\n  type = type || 4\n  switch (type) {\n    case 1:\n      return str.replace(/\\b\\w+\\b/g, function (word: any) {\n        return (\n          word.substring(0, 1).toUpperCase() + word.substring(1).toLowerCase()\n        )\n      })\n    case 2:\n      return str.replace(/\\b\\w+\\b/g, function (word: any) {\n        return (\n          word.substring(0, 1).toLowerCase() + word.substring(1).toUpperCase()\n        )\n      })\n    case 3:\n      return str\n        .split('')\n        .map(function (word: any) {\n          if (/[a-z]/.test(word)) {\n            return word.toUpperCase()\n          } else {\n            return word.toLowerCase()\n          }\n        })\n        .join('')\n    case 4:\n      return str.toUpperCase()\n    case 5:\n      return str.toLowerCase()\n    default:\n      return str\n  }\n}\n\n\n\n\nexport default {\n  _isCardID,\n  _numberToChinese,\n  _changeToChinese,\n  _changeCase,\n}\n","\n//16进制颜色转RGBRGBA字符串 #ffffff opa透明度\nconst _colorToRGB = (val: any, opa: any) => {\n  let pattern = /^(#?)[a-fA-F0-9]{6}$/ //16进制颜色值校验规则\n  let isOpa = typeof opa == 'number' //判断是否有设置不透明度\n  if (!pattern.test(val)) {\n    //如果值不符合规则返回空字符\n    return ''\n  }\n  let v = val.replace(/#/, '') //如果有#号先去除#号\n  let rgbArr = []\n  let rgbStr = ''\n  for (let i = 0; i < 3; i++) {\n    let item = v.substring(i * 2, i * 2 + 2)\n    let num = parseInt(item, 16)\n    rgbArr.push(num)\n  }\n  rgbStr = rgbArr.join()\n  rgbStr =\n    'rgb' + (isOpa ? 'a' : '') + '(' + rgbStr + (isOpa ? ',' + opa : '') + ')'\n  return rgbStr\n}\n\nexport default {\n  _colorToRGB,\n}"],"names":["verify","_isEmail","s","test","_isMobile","_isPhone","_isURL","_isString","o","Object","prototype","toString","call","slice","_isNumber","_isBoolean","_isFunction","_isUndefined","_isObj","_isArray","_isDate","_isRegExp","_isError","_isSymbol","_isPromise","_isSet","ua","navigator","userAgent","toLowerCase","u","_contains","arr","val","indexOf","_unique","Array","hasOwnProperty","from","Set","n","r","i","length","push","_sum","reduce","pre","cur","array","_shuffle","random","result","Math","floor","splice","_sort","type","sort","a","b","_union","newArr","concat","_intersect","map","_filter","filter","console","log","_formArray","ary","isArray","_random","min","max","_remove","ele","index","_max","apply","_min","_average","_isWeiXin","match","_isDeviceMobile","_isQQBrowser","_isIE","_isFirefox","_isChrome","_isOpera","_isSafari","_isSpider","_isIos","_isPC","Agents","flag","v","_isCardID","sId","parseInt","substr","sBirthday","Number","replace","d","Date","getFullYear","getMonth","getDate","_numberToChinese","num","AA","BB","split","k","re","RegExp","charAt","_changeToChinese","Num","String","isNaN","part","newchar","tmpnewchar","perchar","search","_changeCase","str","word","substring","toUpperCase","join","_colorToRGB","opa","isOpa","rgbArr","rgbStr","item","_copyTextToClipboard","value","textArea","document","createElement","style","background","body","appendChild","select","execCommand","err","removeChild","hasClass","el","className","scrollToTop","c","documentElement","scrollTop","window","requestAnimationFrame","scrollTo","newClass","url","key","isChrome","isSafari","link","href","undefined","download","fileName","lastIndexOf","createEvent","e","initEvent","dispatchEvent","open","activeElement","partiallyVisible","top","left","bottom","right","getBoundingClientRect","innerHeight","innerWidth","name","reg","location","x","pageXOffset","scrollLeft","y","pageYOffset","src","async","t","getElementsByTagName","parentNode","insertBefore","soure","newStr","hidden","aProps","getOwnPropertyNames","bProps","propName","date","getDay","reverse","toTimeString","fixed","pow"],"mappings":"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"}